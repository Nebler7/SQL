#Here are LeetCode questions and my answers using MySQL.

--A country is big if:
  --it has an area of at least three million (i.e., 3000000 km2), or
  --it has a population of at least twenty-five million (i.e., 25000000).
--Write an SQL query to report the name, population, and area of the big countries.
SELECT name, population, area 
FROM World 
WHERE area >= 3000000 
OR population >= 25000000;

--Write an SQL query to find the ids of products that are both low fat and recyclable.
SELECT product_id 
FROM Products 
WHERE low_fats = 'Y' 
AND recyclable = 'Y';

--Write an SQL query to report the names of the customer that are not referred by the customer with id = 2.
SELECT name 
FROM Customer 
WHERE referee_id != 2 
OR referee_id IS NULL;

--Write an SQL query to report all customers who never order anything.
SELECT customers.name AS Customers 
FROM customers 
WHERE customers.id 
NOT IN (SELECT customerid FROM orders);

--Write an SQL query to calculate the bonus of each employee. The bonus of an employee is 100% of their salary if the ID of the employee is an odd number and the employee name does not start with the character 'M'. The bonus of an employee is 0 otherwise. Return the result table ordered by employee_id.
SELECT employee_id,
CASE
WHEN employee_id %2!=0 AND name NOT LIKE 'M%' THEN salary
ELSE 0
END AS Bonus
FROM Employees
ORDER BY employee_id; 

--Write an SQL query to swap all 'f' and 'm' values (i.e., change all 'f' values to 'm' and vice versa) with a single update statement and no intermediate temporary tables.
UPDATE Salary SET sex = IF(sex = 'm', 'f', 'm');

--Write an SQL query to delete all the duplicate emails, keeping only one unique email with the smallest id. 
DELETE p1
FROM Person p1, Person p2
WHERE p1.Email = p2.Email AND p1.Id > p2.Id;

--Write an SQL query to fix the names so that only the first character is uppercase and the rest are lowercase. Return the result table ordered by user_id.
SELECT user_id, CONCAT(UCASE(LEFT(name, 1)), LCASE(SUBSTRING(name, 2))) AS name FROM Users ORDER BY user_id;

--Write an SQL query to find for each date the number of different products sold and their names. The sold products names for each date should be sorted lexicographically.Return the result table ordered by sell_date.
SELECT sell_date, COUNT(distinct product) AS num_sold, GROUP_CONCAT(distinct product ORDER BY product) AS products 
FROM Activities 
GROUP BY sell_date 
ORDER BY sell_date;

--Write an SQL query to report the patient_id, patient_name all conditions of patients who have Type I Diabetes. Type I Diabetes always starts with DIAB1 prefix.
SELECT patient_id, patient_name, conditions
FROM Patients
WHERE conditions LIKE 'DIAB1%' 
OR conditions LIKE '% DIAB1%';
